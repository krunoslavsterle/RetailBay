// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RetailBay.Infrastructure.EntityFramework;

namespace RetailBay.Infrastructure.EntityFramework.Migrations.Migrations.TenantDB
{
    [DbContext(typeof(TenantDBContext))]
    [Migration("20180929170352_ProductDataAnnotations")]
    partial class ProductDataAnnotations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-preview2-35157")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("RetailBay.Core.Entities.TenantDB.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnName("date_created");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<bool>("IsPublished")
                        .HasColumnName("is_published");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(500);

                    b.Property<Guid>("ProductCategoryId")
                        .HasColumnName("product_category_id");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnName("slug")
                        .HasMaxLength(500);

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("time_stamp");

                    b.HasKey("Id")
                        .HasName("pk_product");

                    b.HasIndex("ProductCategoryId")
                        .HasName("ix_product_product_category_id");

                    b.ToTable("product");
                });

            modelBuilder.Entity("RetailBay.Core.Entities.TenantDB.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Abrv")
                        .IsRequired()
                        .HasColumnName("abrv");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnName("date_created");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnName("date_updated");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnName("slug");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("time_stamp");

                    b.HasKey("Id")
                        .HasName("pk_product_categories");

                    b.ToTable("product_category");
                });

            modelBuilder.Entity("RetailBay.Core.Entities.TenantDB.Product", b =>
                {
                    b.HasOne("RetailBay.Core.Entities.TenantDB.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .HasConstraintName("fk_product_product_categories_product_category_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("RetailBay.Core.Entities.TenantDB.ProductPrice", "ProductPrice", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnName("id");

                            b1.Property<DateTime>("DateCreated")
                                .HasColumnName("date_created");

                            b1.Property<DateTime>("DateUpdated")
                                .HasColumnName("date_updated");

                            b1.Property<decimal>("Price")
                                .HasColumnName("price");

                            b1.Property<byte[]>("TimeStamp")
                                .IsConcurrencyToken()
                                .ValueGeneratedOnAddOrUpdate()
                                .HasColumnName("time_stamp");

                            b1.HasKey("Id")
                                .HasName("pk_product_prices");

                            b1.ToTable("product_price");

                            b1.HasOne("RetailBay.Core.Entities.TenantDB.Product", "Product")
                                .WithOne("ProductPrice")
                                .HasForeignKey("RetailBay.Core.Entities.TenantDB.ProductPrice", "Id")
                                .HasConstraintName("fk_product_product_prices_product_price_id")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
